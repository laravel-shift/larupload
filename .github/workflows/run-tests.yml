name: Run Tests

on:
  - push
  - pull_request

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: [8.1, 8.2, 8.3, 8.4]
        laravel: ['10.*', '11.*']
        coverage: [none]
        dependency-version: [prefer-stable]
        include:
          - laravel: 10.*
            testbench: 8.*
          - laravel: 11.*
            testbench: 9.*
        exclude:
          - laravel: 11.*
            php: 8.1

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} - ${{ matrix.os }} - ${{ matrix.dependency-version }}

    steps:
      - name: Update apt
        run: sudo apt-get update --fix-missing

      - name: Install ffmpeg
        run: sudo apt-get install ffmpeg

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Install optimizers
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jpegoptim pngquant gifsicle optipng libjpeg-progs webp
          sudo npm install -g svgo

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, sqlite3, pdo_sqlite, bcmath, fileinfo, gd, imagick, xdebug
          tools: composer:v2
          ini-values: xdebug.mode="coverage"
          coverage: xdebug

      - name: Fix Imagick Policy
        run: sudo sed -i 's/none/read|write/g' /etc/ImageMagick-6/policy.xml

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

      - name: Execute tests
        run: composer test:ci

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
